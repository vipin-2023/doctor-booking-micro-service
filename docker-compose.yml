version: '3.9'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: dr_zookeeper
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"

  kafka1:
    image: wurstmeister/kafka
    container_name: kafka1
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:3001
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper

  kafka2:
    image: wurstmeister/kafka
    container_name: kafka2
    ports:
      - "9093:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:3002
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper

  kafka3:
    image: wurstmeister/kafka
    container_name: kafka3
    ports:
      - "9094:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:3003
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper

  nginx:
    image: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - app-network

  react-app:
    image: your-react-app-image
    # Configure your React app details (ports, volumes, etc.)
    networks:
      - app-network

  users-service:
    image: your-users-service-image
    # Configure your users service details (ports, volumes, etc.)
    networks:
      - app-network

  doctor-service:
    image: your-doctor-service-image
    # Configure your doctor service details (ports, volumes, etc.)
    networks:
      - app-network

  appointment-service:
    image: your-appointment-service-image
    # Configure your appointment service details (ports, volumes, etc.)
    networks:
      - app-network

networks:
  app-network:
    driver: bridge